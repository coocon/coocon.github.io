<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>朋行天下的Javascript世界</title>
    <description>一个程序猿的世界里边住着一个中二病：碎裂吧，镜花水月！
</description>
    <link>http://blog.coocons.com/</link>
    <atom:link href="http://blog.coocons.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 16 Dec 2015 11:05:03 +0800</pubDate>
    <lastBuildDate>Wed, 16 Dec 2015 11:05:03 +0800</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>使用charles查看https请求</title>
        <description>&lt;h4 id=&quot;charleshttpwwwcharlesproxycom&quot;&gt;关于&lt;a href=&quot;http://www.charlesproxy.com/&quot;&gt;charles&lt;/a&gt;:&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;http的调试工具有好多：Fiddler、HttpWatch、Charles。windows上的Fiddler非常好用，不过由于需要.net的环境，在Mac上使用起来就不方便。HttpWatch 只能集成到浏览器上也不支持Mac。Charles是基于Java的,跨平台性良好，功能也强大，今天就说说charles吧。好了废话不多讲了，http的调试方法就是直接设置客户端代理服务器为Charles的ip和端口，就不细说了，现在开始说https的调试方法。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;https是以安全为目标的http通道，基于SSL/TLS协议来实现。关于SSL/TLS协议，请参考阮老师的这篇文章&lt;a href=&quot;http://www.ruanyifeng.com/blog/2014/02/ssl_tls.html&quot;&gt;SSL/TLS协议运行机制的概述&lt;/a&gt;。
https传输的内容最后经过对称加密来和服务端进行通信,但是我们不知道密码，因此不能像普通的http随意查看。为了查看加密前的内容，我们只能获取密码才能解密。那么如何获取这个对称加密的密码呢？根据SSL/TLS协议，我们发现，如果我们冒充服务器，给浏览器我们自己的证书，那么浏览器加密以后的内容我们就可以获取到，然后拿到内容以后把自己当做client，去向真正的server发送请求，来获取真正的内容，再转发给client。代理服务器就是这个实现逻辑。关于中间人的介绍可以参考这篇文章——&lt;a href=&quot;http://security.ctocio.com.cn/297/9483797.shtml&quot;&gt;解析中间人攻击之四——SSL欺骗&lt;/a&gt;。&lt;/p&gt;

</description>
        <pubDate>Thu, 01 Oct 2015 02:54:18 +0800</pubDate>
        <link>http://blog.coocons.com/other/2015/10/01/charles%E6%9F%A5%E7%9C%8Bhttps%E8%AF%B7%E6%B1%82.html</link>
        <guid isPermaLink="true">http://blog.coocons.com/other/2015/10/01/charles%E6%9F%A5%E7%9C%8Bhttps%E8%AF%B7%E6%B1%82.html</guid>
        
        
        <category>other</category>
        
      </item>
    
  </channel>
</rss>
